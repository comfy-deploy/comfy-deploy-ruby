# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class InputsDefinition < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :class_type, ::OpenApiSDK::Operations::GetDeploymentClassType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('class_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::GetDeploymentClassType, false) } }

      field :default_value, ::Object, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('default_value') } }

      field :input_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('input_id') } }

      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }

      field :display_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('display_name') } }

      field :enum_values, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('enum_values') } }

      field :max_value, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('max_value') } }

      field :min_value, T.nilable(::Float), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('min_value') } }


      sig { params(class_type: ::OpenApiSDK::Operations::GetDeploymentClassType, default_value: ::Object, input_id: ::String, description: T.nilable(::String), display_name: T.nilable(::String), enum_values: T.nilable(T::Array[::String]), max_value: T.nilable(::Float), min_value: T.nilable(::Float)).void }
      def initialize(class_type: nil, default_value: nil, input_id: nil, description: nil, display_name: nil, enum_values: nil, max_value: nil, min_value: nil)
        @class_type = class_type
        @default_value = default_value
        @input_id = input_id
        @description = description
        @display_name = display_name
        @enum_values = enum_values
        @max_value = max_value
        @min_value = min_value
      end
    end
  end
end
