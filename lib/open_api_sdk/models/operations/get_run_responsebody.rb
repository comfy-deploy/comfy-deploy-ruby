# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  
    # Retrieve the output
    class GetRunResponseBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :batch_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('batch_id') } }

      field :created_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :ended_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('ended_at') } }

      field :favorite, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('favorite') } }

      field :gpu, ::OpenApiSDK::Operations::GetRunGpu, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('gpu'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::GetRunGpu, false) } }

      field :gpu_event_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('gpu_event_id') } }

      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

      field :is_realtime, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('is_realtime') } }

      field :live_status, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('live_status') } }

      field :machine_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('machine_id') } }

      field :machine_type, ::OpenApiSDK::Operations::MachineType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('machine_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::MachineType, false) } }

      field :machine_version, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('machine_version') } }

      field :modal_function_call_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('modal_function_call_id') } }

      field :model_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('model_id') } }

      field :org_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('org_id') } }

      field :origin, ::OpenApiSDK::Operations::Origin, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('origin'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::Origin, false) } }

      field :progress, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('progress') } }

      field :queued_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('queued_at') } }

      field :started_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('started_at') } }

      field :status, ::OpenApiSDK::Operations::GetRunStatus, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::GetRunStatus, false) } }

      field :updated_at, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('updated_at') } }

      field :user_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('user_id') } }

      field :webhook, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('webhook') } }

      field :webhook_intermediate_status, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('webhook_intermediate_status') } }

      field :webhook_status, ::OpenApiSDK::Operations::WebhookStatus, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('webhook_status'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Operations::WebhookStatus, false) } }

      field :workflow_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_id') } }

      field :workflow_inputs, ::OpenApiSDK::Operations::WorkflowInputs, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_inputs') } }

      field :workflow_version_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_version_id') } }

      field :outputs, T.nilable(T::Array[::OpenApiSDK::Operations::Outputs]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('outputs') } }

      field :run_log, T.nilable(::OpenApiSDK::Operations::RunLog), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('run_log') } }

      field :workflow_api, T.nilable(::OpenApiSDK::Operations::GetRunWorkflowApi), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_api') } }


      sig { params(batch_id: ::String, created_at: ::String, ended_at: ::String, favorite: T::Boolean, gpu: ::OpenApiSDK::Operations::GetRunGpu, gpu_event_id: ::String, id: ::String, is_realtime: T::Boolean, live_status: ::String, machine_id: ::String, machine_type: ::OpenApiSDK::Operations::MachineType, machine_version: ::String, modal_function_call_id: ::String, model_id: ::String, org_id: ::String, origin: ::OpenApiSDK::Operations::Origin, progress: ::Float, queued_at: ::String, started_at: ::String, status: ::OpenApiSDK::Operations::GetRunStatus, updated_at: ::String, user_id: ::String, webhook: ::String, webhook_intermediate_status: T::Boolean, webhook_status: ::OpenApiSDK::Operations::WebhookStatus, workflow_id: ::String, workflow_inputs: ::OpenApiSDK::Operations::WorkflowInputs, workflow_version_id: ::String, outputs: T.nilable(T::Array[::OpenApiSDK::Operations::Outputs]), run_log: T.nilable(::OpenApiSDK::Operations::RunLog), workflow_api: T.nilable(::OpenApiSDK::Operations::GetRunWorkflowApi)).void }
      def initialize(batch_id: nil, created_at: nil, ended_at: nil, favorite: nil, gpu: nil, gpu_event_id: nil, id: nil, is_realtime: nil, live_status: nil, machine_id: nil, machine_type: nil, machine_version: nil, modal_function_call_id: nil, model_id: nil, org_id: nil, origin: nil, progress: nil, queued_at: nil, started_at: nil, status: nil, updated_at: nil, user_id: nil, webhook: nil, webhook_intermediate_status: nil, webhook_status: nil, workflow_id: nil, workflow_inputs: nil, workflow_version_id: nil, outputs: nil, run_log: nil, workflow_api: nil)
        @batch_id = batch_id
        @created_at = created_at
        @ended_at = ended_at
        @favorite = favorite
        @gpu = gpu
        @gpu_event_id = gpu_event_id
        @id = id
        @is_realtime = is_realtime
        @live_status = live_status
        @machine_id = machine_id
        @machine_type = machine_type
        @machine_version = machine_version
        @modal_function_call_id = modal_function_call_id
        @model_id = model_id
        @org_id = org_id
        @origin = origin
        @progress = progress
        @queued_at = queued_at
        @started_at = started_at
        @status = status
        @updated_at = updated_at
        @user_id = user_id
        @webhook = webhook
        @webhook_intermediate_status = webhook_intermediate_status
        @webhook_status = webhook_status
        @workflow_id = workflow_id
        @workflow_inputs = workflow_inputs
        @workflow_version_id = workflow_version_id
        @outputs = outputs
        @run_log = run_log
        @workflow_api = workflow_api
      end
    end
  end
end
