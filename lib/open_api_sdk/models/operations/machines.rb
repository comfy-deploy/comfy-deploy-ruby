# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class Machines < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :endpoints, T::Array[::String], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('endpoints') } }

      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

      field :created_at, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at') } }

      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :object_info, T.nilable(::Object), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('object_info') } }

      field :status, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status') } }

      field :type, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type') } }

      field :updated_at, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('updated_at') } }


      sig { params(endpoints: T::Array[::String], id: ::String, created_at: T.nilable(::String), name: T.nilable(::String), object_info: T.nilable(::Object), status: T.nilable(::String), type: T.nilable(::String), updated_at: T.nilable(::String)).void }
      def initialize(endpoints: nil, id: nil, created_at: nil, name: nil, object_info: nil, status: nil, type: nil, updated_at: nil)
        @endpoints = endpoints
        @id = id
        @created_at = created_at
        @name = name
        @object_info = object_info
        @status = status
        @type = type
        @updated_at = updated_at
      end
    end
  end
end
