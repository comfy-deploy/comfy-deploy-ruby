# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class PostWorkflowRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :snapshot, ::OpenApiSDK::Operations::Snapshot, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('snapshot') } }

      field :workflow_api, T::Hash[Symbol, ::OpenApiSDK::Operations::WorkflowApi], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_api') } }

      field :dependencies, T.nilable(::OpenApiSDK::Operations::Dependencies), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('dependencies') } }

      field :workflow, T.nilable(::Object), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow') } }

      field :workflow_id, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_id') } }

      field :workflow_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workflow_name') } }


      sig { params(snapshot: ::OpenApiSDK::Operations::Snapshot, workflow_api: T::Hash[Symbol, ::OpenApiSDK::Operations::WorkflowApi], dependencies: T.nilable(::OpenApiSDK::Operations::Dependencies), workflow: T.nilable(::Object), workflow_id: T.nilable(::String), workflow_name: T.nilable(::String)).void }
      def initialize(snapshot: nil, workflow_api: nil, dependencies: nil, workflow: nil, workflow_id: nil, workflow_name: nil)
        @snapshot = snapshot
        @workflow_api = workflow_api
        @dependencies = dependencies
        @workflow = workflow
        @workflow_id = workflow_id
        @workflow_name = workflow_name
      end
    end
  end
end
