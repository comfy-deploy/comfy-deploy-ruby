# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class CustomNodes < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('url') } }

      field :files, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('files') } }

      field :hash, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('hash') } }

      field :install_type, T.nilable(::Object), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('install_type') } }

      field :node, T.nilable(T::Array[::OpenApiSDK::Operations::Node]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('node') } }

      field :pip, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('pip') } }

      field :warning, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('warning') } }


      sig { params(name: ::String, url: ::String, files: T.nilable(T::Array[::String]), hash: T.nilable(::String), install_type: T.nilable(::Object), node: T.nilable(T::Array[::OpenApiSDK::Operations::Node]), pip: T.nilable(T::Array[::String]), warning: T.nilable(::String)).void }
      def initialize(name: nil, url: nil, files: nil, hash: nil, install_type: nil, node: nil, pip: nil, warning: nil)
        @name = name
        @url = url
        @files = files
        @hash = hash
        @install_type = install_type
        @node = node
        @pip = pip
        @warning = warning
      end
    end
  end
end
